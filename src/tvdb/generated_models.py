# generated by datamodel-codegen:
#   filename:  swagger.yml
#   timestamp: 2024-07-20T12:48:32+00:00
# ruff: noqa: N815, ERA001, D101 # allow camelCase, disable check for commented out code, and allow undocumented class docstring
from __future__ import annotations

from pydantic import BaseModel, Field, RootModel


class Alias(BaseModel):
    language: str | None = Field(
        None,
        description="A 3-4 character string indicating the language of the alias, as defined in Language.",
        max_length=4,
    )
    name: str | None = Field(None, description="A string containing the alias itself.", max_length=100)


class ArtworkBaseRecord(BaseModel):
    height: int | None = None
    id: int | None = None
    image: str | None = None
    includesText: bool | None = None
    language: str | None = None
    score: float | None = None
    thumbnail: str | None = None
    type: int | None = Field(
        None,
        description="The artwork type corresponds to the ids from the /artwork/types endpoint.",
    )
    width: int | None = None


class ArtworkStatus(BaseModel):
    id: int | None = None
    name: str | None = None


class ArtworkType(BaseModel):
    height: int | None = None
    id: int | None = None
    imageFormat: str | None = None
    name: str | None = None
    recordType: str | None = None
    slug: str | None = None
    thumbHeight: int | None = None
    thumbWidth: int | None = None
    width: int | None = None


class AwardBaseRecord(BaseModel):
    id: int | None = None
    name: str | None = None


class AwardCategoryBaseRecord(BaseModel):
    allowCoNominees: bool | None = None
    award: AwardBaseRecord | None = None
    forMovies: bool | None = None
    forSeries: bool | None = None
    id: int | None = None
    name: str | None = None


class AwardExtendedRecord(BaseModel):
    categories: list[AwardCategoryBaseRecord] | None = None
    id: int | None = None
    name: str | None = None
    score: int | None = None


class Biography(BaseModel):
    biography: str | None = None
    language: str | None = None


class CompanyRelationShip(BaseModel):
    id: int | None = None
    typeName: str | None = None


class CompanyType(BaseModel):
    companyTypeId: int | None = None
    companyTypeName: str | None = None


class ContentRating(BaseModel):
    id: int | None = None
    name: str | None = None
    description: str | None = None
    country: str | None = None
    contentType: str | None = None
    order: int | None = None
    fullName: str | None = None


class Country(BaseModel):
    id: str | None = None
    name: str | None = None
    shortCode: str | None = None


class Entity(BaseModel):
    movieId: int | None = None
    order: int | None = None
    seriesId: int | None = None


class EntityType(BaseModel):
    id: int | None = None
    name: str | None = None
    hasSpecials: bool | None = None


class EntityUpdate(BaseModel):
    entityType: str | None = None
    methodInt: int | None = None
    method: str | None = None
    extraInfo: str | None = None
    userId: int | None = None
    recordType: str | None = None
    recordId: int | None = None
    timeStamp: int | None = None
    seriesId: int | None = Field(None, description="Only present for episodes records")
    mergeToId: int | None = None
    mergeToEntityType: str | None = None


class Favorites(BaseModel):
    series: list[int] | None = None
    movies: list[int] | None = None
    episodes: list[int] | None = None
    artwork: list[int] | None = None
    people: list[int] | None = None
    lists: list[int] | None = None


class FavoriteRecord(BaseModel):
    series: int | None = None
    movie: int | None = None
    episode: int | None = None
    artwork: int | None = None
    people: int | None = None
    list: int | None = None


class Gender(BaseModel):
    id: int | None = None
    name: str | None = None


class GenreBaseRecord(BaseModel):
    id: int | None = None
    name: str | None = None
    slug: str | None = None


class Language(BaseModel):
    id: str | None = None
    name: str | None = None
    nativeName: str | None = None
    shortCode: str | None = None


class ListExtendedRecord(BaseModel):
    aliases: list[Alias] | None = None
    entities: list[Entity] | None = None
    id: int | None = None
    image: str | None = None
    imageIsFallback: bool | None = None
    isOfficial: bool | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    overview: str | None = None
    overviewTranslations: list[str] | None = None
    score: int | None = None
    url: str | None = None


class PeopleBaseRecord(BaseModel):
    aliases: list[Alias] | None = None
    id: int | None = None
    image: str | None = None
    lastUpdated: str | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    overviewTranslations: list[str] | None = None
    score: int | None = None


class PeopleType(BaseModel):
    id: int | None = None
    name: str | None = None


class Race(BaseModel):
    pass


class RecordInfo(BaseModel):
    image: str | None = None
    name: str | None = None
    year: str | None = None


class Release(BaseModel):
    country: str | None = None
    date: str | None = None
    detail: str | None = None


class RemoteID(BaseModel):
    id: str | None = None
    type: int | None = None
    sourceName: str | None = None


class SeasonType(BaseModel):
    alternateName: str | None = None
    id: int | None = None
    name: str | None = None
    type: str | None = None


class SeriesAirsDays(BaseModel):
    friday: bool | None = None
    monday: bool | None = None
    saturday: bool | None = None
    sunday: bool | None = None
    thursday: bool | None = None
    tuesday: bool | None = None
    wednesday: bool | None = None


class SourceType(BaseModel):
    id: int | None = None
    name: str | None = None
    postfix: str | None = None
    prefix: str | None = None
    slug: str | None = None
    sort: int | None = None


class Status(BaseModel):
    id: int | None = None
    keepUpdated: bool | None = None
    name: str | None = None
    recordType: str | None = None


class StudioBaseRecord(BaseModel):
    id: int | None = None
    name: str | None = None
    parentStudio: int | None = None


class TagOption(BaseModel):
    helpText: str | None = None
    id: int | None = None
    name: str | None = None
    tag: int | None = None
    tagName: str | None = None


class Trailer(BaseModel):
    id: int | None = None
    language: str | None = None
    name: str | None = None
    url: str | None = None
    runtime: int | None = None


class Translation(BaseModel):
    aliases: list[str] | None = None
    isAlias: bool | None = None
    isPrimary: bool | None = None
    language: str | None = None
    name: str | None = None
    overview: str | None = None
    tagline: str | None = Field(
        None,
        description="Only populated for movie translations.  We disallow taglines without a title.",
    )


class TranslationSimple(RootModel[dict[str, str] | None]):
    root: dict[str, str] | None = None


class TranslationExtended(BaseModel):
    nameTranslations: list[Translation] | None = None
    overviewTranslations: list[Translation] | None = None
    alias: list[str] | None = None


class TagOptionEntity(BaseModel):
    name: str | None = None
    tagName: str | None = None
    tagId: int | None = None


class UserInfo(BaseModel):
    id: int | None = None
    language: str | None = None
    name: str | None = None
    type: str | None = None


class Inspiration(BaseModel):
    id: int | None = None
    type: str | None = None
    type_name: str | None = None
    url: str | None = None


class InspirationType(BaseModel):
    id: int | None = None
    name: str | None = None
    description: str | None = None
    reference_name: str | None = None
    url: str | None = None


class ProductionCountry(BaseModel):
    id: int | None = None
    country: str | None = None
    name: str | None = None


class Links(BaseModel):
    prev: str | None = None
    self: str | None = None
    next: str | None = None
    total_items: int | None = None
    page_size: int | None = None


class ArtworkExtendedRecord(BaseModel):
    episodeId: int | None = None
    height: int | None = None
    id: int | None = None
    image: str | None = None
    includesText: bool | None = None
    language: str | None = None
    movieId: int | None = None
    networkId: int | None = None
    peopleId: int | None = None
    score: float | None = None
    seasonId: int | None = None
    seriesId: int | None = None
    seriesPeopleId: int | None = None
    status: ArtworkStatus | None = None
    tagOptions: list[TagOption] | None = None
    thumbnail: str | None = None
    thumbnailHeight: int | None = None
    thumbnailWidth: int | None = None
    type: int | None = Field(
        None,
        description="The artwork type corresponds to the ids from the /artwork/types endpoint.",
    )
    updatedAt: int | None = None
    width: int | None = None


class Character(BaseModel):
    aliases: list[Alias] | None = None
    episode: RecordInfo | None = None
    episodeId: int | None = None
    id: int | None = None
    image: str | None = None
    isFeatured: bool | None = None
    movieId: int | None = None
    movie: RecordInfo | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    overviewTranslations: list[str] | None = None
    peopleId: int | None = None
    personImgURL: str | None = None
    peopleType: str | None = None
    seriesId: int | None = None
    series: RecordInfo | None = None
    sort: int | None = None
    tagOptions: list[TagOption] | None = None
    type: int | None = None
    url: str | None = None
    personName: str | None = None


class ParentCompany(BaseModel):
    id: int | None = None
    name: str | None = None
    relation: CompanyRelationShip | None = None


class ListBaseRecord(BaseModel):
    aliases: list[Alias] | None = None
    id: int | None = None
    image: str | None = None
    imageIsFallback: bool | None = None
    isOfficial: bool | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    overview: str | None = None
    overviewTranslations: list[str] | None = None
    remoteIds: list[RemoteID] | None = None
    tags: list[TagOption] | None = None
    score: int | None = None
    url: str | None = None


class MovieBaseRecord(BaseModel):
    aliases: list[Alias] | None = None
    id: int | None = None
    image: str | None = None
    lastUpdated: str | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    overviewTranslations: list[str] | None = None
    score: float | None = None
    slug: str | None = None
    status: Status | None = None
    runtime: int | None = None
    year: str | None = None


class PeopleExtendedRecord(BaseModel):
    aliases: list[Alias] | None = None
    awards: list[AwardBaseRecord] | None = None
    biographies: list[Biography] | None = None
    birth: str | None = None
    birthPlace: str | None = None
    characters: list[Character] | None = None
    death: str | None = None
    gender: int | None = None
    id: int | None = None
    image: str | None = None
    lastUpdated: str | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    overviewTranslations: list[str] | None = None
    races: list[Race] | None = None
    remoteIds: list[RemoteID] | None = None
    score: int | None = None
    slug: str | None = None
    tagOptions: list[TagOption] | None = None
    translations: TranslationExtended | None = None


class SearchResult(BaseModel):
    aliases: list[str] | None = None
    companies: list[str] | None = None
    companyType: str | None = None
    country: str | None = None
    director: str | None = None
    first_air_time: str | None = None
    genres: list[str] | None = None
    id: str
    image_url: str | None = None
    name: str | None = None
    is_official: bool | None = None
    name_translated: str | None = None
    network: str | None = None
    objectID: str | None = None
    officialList: str | None = None
    overview: str | None = None
    overviews: TranslationSimple | None = None
    overview_translated: list[str] | None = None
    poster: str | None = None
    posters: list[str] | None = None
    primary_language: str | None = None
    remote_ids: list[RemoteID] | None = None
    status: str | None = None
    slug: str | None = None
    studios: list[str] | None = None
    title: str | None = None
    thumbnail: str | None = None
    translations: TranslationSimple | None = None
    translationsWithLang: list[str] | None = None
    tvdb_id: str | None = None
    type: str | None = None
    year: str | None = None


class Tag(BaseModel):
    allowsMultiple: bool | None = None
    helpText: str | None = None
    id: int | None = None
    name: str | None = None
    options: list[TagOption] | None = None


class Company(BaseModel):
    activeDate: str | None = None
    aliases: list[Alias] | None = None
    country: str | None = None
    id: int | None = None
    inactiveDate: str | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    overviewTranslations: list[str] | None = None
    primaryCompanyType: int | None = None
    slug: str | None = None
    parentCompany: ParentCompany | None = None
    tagOptions: list[TagOption] | None = None


class Companies(BaseModel):
    studio: list[Company] | None = None
    network: list[Company] | None = None
    production: list[Company] | None = None
    distributor: list[Company] | None = None
    special_effects: list[Company] | None = None


class MovieExtendedRecord(BaseModel):
    aliases: list[Alias] | None = None
    artworks: list[ArtworkBaseRecord] | None = None
    audioLanguages: list[str] | None = None
    awards: list[AwardBaseRecord] | None = None
    boxOffice: str | None = None
    boxOfficeUS: str | None = None
    budget: str | None = None
    characters: list[Character] | None = None
    companies: Companies | None = None
    contentRatings: list[ContentRating] | None = None
    first_release: Release | None = None
    genres: list[GenreBaseRecord] | None = None
    id: int | None = None
    image: str | None = None
    inspirations: list[Inspiration] | None = None
    lastUpdated: str | None = None
    lists: list[ListBaseRecord] | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    originalCountry: str | None = None
    originalLanguage: str | None = None
    overviewTranslations: list[str] | None = None
    production_countries: list[ProductionCountry] | None = None
    releases: list[Release] | None = None
    remoteIds: list[RemoteID] | None = None
    runtime: int | None = None
    score: float | None = None
    slug: str | None = None
    spoken_languages: list[str] | None = None
    status: Status | None = None
    studios: list[StudioBaseRecord] | None = None
    subtitleLanguages: list[str] | None = None
    tagOptions: list[TagOption] | None = None
    trailers: list[Trailer] | None = None
    translations: TranslationExtended | None = None
    year: str | None = None


class SeasonBaseRecord(BaseModel):
    id: int | None = None
    image: str | None = None
    imageType: int | None = None
    lastUpdated: str | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    number: int | None = None
    overviewTranslations: list[str] | None = None
    companies: Companies | None = None
    seriesId: int | None = None
    type: SeasonType | None = None
    year: str | None = None


class EpisodeBaseRecord(BaseModel):
    absoluteNumber: int | None = None
    aired: str | None = None
    airsAfterSeason: int | None = None
    airsBeforeEpisode: int | None = None
    airsBeforeSeason: int | None = None
    finaleType: str | None = Field(None, description="season, midseason, or series")
    id: int | None = None
    image: str | None = None
    imageType: int | None = None
    isMovie: int | None = None
    lastUpdated: str | None = None
    linkedMovie: int | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    number: int | None = None
    overview: str | None = None
    overviewTranslations: list[str] | None = None
    runtime: int | None = None
    seasonNumber: int | None = None
    seasons: list[SeasonBaseRecord] | None = None
    seriesId: int | None = None
    seasonName: str | None = None
    year: str | None = None


class SeasonExtendedRecord(BaseModel):
    artwork: list[ArtworkBaseRecord] | None = None
    companies: Companies | None = None
    episodes: list[EpisodeBaseRecord] | None = None
    id: int | None = None
    image: str | None = None
    imageType: int | None = None
    lastUpdated: str | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    number: int | None = None
    overviewTranslations: list[str] | None = None
    seriesId: int | None = None
    trailers: list[Trailer] | None = None
    type: SeasonType | None = None
    tagOptions: list[TagOption] | None = None
    translations: list[Translation] | None = None
    year: str | None = None


class SeriesBaseRecord(BaseModel):
    aliases: list[Alias] | None = None
    averageRuntime: int | None = None
    country: str | None = None
    defaultSeasonType: int | None = None
    episodes: list[EpisodeBaseRecord] | None = None
    firstAired: str | None = None
    id: int | None = None
    image: str | None = None
    isOrderRandomized: bool | None = None
    lastAired: str | None = None
    lastUpdated: str | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    nextAired: str | None = None
    originalCountry: str | None = None
    originalLanguage: str | None = None
    overviewTranslations: list[str] | None = None
    score: float | None = None
    slug: str | None = None
    status: Status | None = None
    year: str | None = None


class SeriesExtendedRecord(BaseModel):
    abbreviation: str | None = None
    airsDays: SeriesAirsDays | None = None
    airsTime: str | None = None
    aliases: list[Alias] | None = None
    artworks: list[ArtworkExtendedRecord] | None = None
    averageRuntime: int | None = None
    characters: list[Character] | None = None
    contentRatings: list[ContentRating] | None = None
    country: str | None = None
    defaultSeasonType: int | None = None
    episodes: list[EpisodeBaseRecord] | None = None
    firstAired: str | None = None
    lists: list[ListBaseRecord] | None = None
    genres: list[GenreBaseRecord] | None = None
    id: int | None = None
    image: str | None = None
    isOrderRandomized: bool | None = None
    lastAired: str | None = None
    lastUpdated: str | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    companies: list[Company] | None = None
    nextAired: str | None = None
    originalCountry: str | None = None
    originalLanguage: str | None = None
    originalNetwork: Company | None = None
    overview: str | None = None
    latestNetwork: Company | None = None
    overviewTranslations: list[str] | None = None
    remoteIds: list[RemoteID] | None = None
    score: float | None = None
    seasons: list[SeasonBaseRecord] | None = None
    seasonTypes: list[SeasonType] | None = None
    slug: str | None = None
    status: Status | None = None
    tags: list[TagOption] | None = None
    trailers: list[Trailer] | None = None
    translations: TranslationExtended | None = None
    year: str | None = None


class AwardNomineeBaseRecord(BaseModel):
    character: Character | None = None
    details: str | None = None
    episode: EpisodeBaseRecord | None = None
    id: int | None = None
    isWinner: bool | None = None
    movie: MovieBaseRecord | None = None
    series: SeriesBaseRecord | None = None
    year: str | None = None
    category: str | None = None
    name: str | None = None


class EpisodeExtendedRecord(BaseModel):
    aired: str | None = None
    airsAfterSeason: int | None = None
    airsBeforeEpisode: int | None = None
    airsBeforeSeason: int | None = None
    awards: list[AwardBaseRecord] | None = None
    characters: list[Character] | None = None
    companies: list[Company] | None = None
    contentRatings: list[ContentRating] | None = None
    finaleType: str | None = Field(None, description="season, midseason, or series")
    id: int | None = None
    image: str | None = None
    imageType: int | None = None
    isMovie: int | None = None
    lastUpdated: str | None = None
    linkedMovie: int | None = None
    name: str | None = None
    nameTranslations: list[str] | None = None
    networks: list[Company] | None = None
    nominations: list[AwardNomineeBaseRecord] | None = None
    number: int | None = None
    overview: str | None = None
    overviewTranslations: list[str] | None = None
    productionCode: str | None = None
    remoteIds: list[RemoteID] | None = None
    runtime: int | None = None
    seasonNumber: int | None = None
    seasons: list[SeasonBaseRecord] | None = None
    seriesId: int | None = None
    studios: list[Company] | None = None
    tagOptions: list[TagOption] | None = None
    trailers: list[Trailer] | None = None
    translations: TranslationExtended | None = None
    year: str | None = None


class SearchByRemoteIdResult(BaseModel):
    series: SeriesBaseRecord | None = None
    people: PeopleBaseRecord | None = None
    movie: MovieBaseRecord | None = None
    episode: EpisodeBaseRecord | None = None
    company: Company | None = None


class AwardCategoryExtendedRecord(BaseModel):
    allowCoNominees: bool | None = None
    award: AwardBaseRecord | None = None
    forMovies: bool | None = None
    forSeries: bool | None = None
    id: int | None = None
    name: str | None = None
    nominees: list[AwardNomineeBaseRecord] | None = None
